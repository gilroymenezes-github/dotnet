@page "/quizMaker"

@using QuizManager.Components
@using QuizManager.Models
@using QuizManager.Services

@inject QuizItemService QuizItemService

<h3>Make your quiz!</h3>

<section>
    @if (isEditMode)
    {
        <QuizItemEditor QuizItem="currentQuizItem" CreatedQuizItem="HandleCreatedQuizItem"></QuizItemEditor>
    }
    else
    {
        <QuizItemViewer NumberedQuizItem="(currentQuizItem, 0)"></QuizItemViewer>
        <div class="text-right">
            <button @onclick="@(()=>DeleteQuizItem(currentQuizItem))" class="btn btn-danger">Delete</button>
            <button @onclick="@(()=>EditQuizItem())" class="btn btn-secondary">Edit</button>
            <button @onclick="@(()=>AddQuizItem())" class="btn btn-primary">Save</button>
        </div>
    }
</section>

<hr />
@if (quizItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var quizItem in quizItems)
    {
        <section>
            <QuizItemViewer NumberedQuizItem="(quizItem, 0)"></QuizItemViewer>
            <div class="text-right">
                <button @onclick="@(() => DeleteQuizItem(quizItem))" class="btn btn-danger">Delete</button>
            </div>
        </section>
        <br />
    }
}

@code {
    private bool isEditMode;
    private QuizItem currentQuizItem = new QuizItem();
    List<QuizItem> quizItems;

    protected override void OnInitialized() => isEditMode = true;
    protected void EditQuizItem() => isEditMode = true;

    protected override async Task OnInitializedAsync()
    {
        quizItems = await QuizItemService.GetQuizItemsAsync();
    }

    void HandleCreatedQuizItem(QuizItem quizItem)
    {
        isEditMode = false;
        this.currentQuizItem = quizItem;
    }

    async Task DeleteQuizItem(QuizItem quizItem)
    {
        await QuizItemService.DeleteQuizItem(quizItem);
        await ResetQuizMaker();
    }

    async Task AddQuizItem()
    {
        await QuizItemService.InsertQuizItem(currentQuizItem);
        await ResetQuizMaker();
    }

    async Task ResetQuizMaker()
    {
        isEditMode = true;
        currentQuizItem = new QuizItem();
        quizItems = await QuizItemService.GetQuizItemsAsync();
    }
}
