@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject HttpClient HttpClient
@if (User?.Identity?.Name != null)
{
   @* <MudAvatar Image="@Avatar" Alt="@Avatar" Size=Size.Small />*@
    <MudText>Hello @GivenName @Surname</MudText>
    <MudIconButton Icon="@Icons.Material.Rounded.Logout" Color="Color.Inherit" Link="/Logout" Target="_top" Size=Size.Small />
}
else
{
    <MudIconButton Icon="@Icons.Material.Rounded.Login" Color="Color.Inherit" Link="/Login" Target="_top" Size=Size.Small />
}

@code {
    private ClaimsPrincipal? User;
    private string? GivenName;
    private string? Surname;
    private string? Avatar;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        try
        {
            // Set the user to determine if they are logged in
            User = HttpContextAccessor?.HttpContext?.User;
            // Try to get the GivenName
            var givenName = HttpContextAccessor?.HttpContext?.User.FindFirst(ClaimTypes.GivenName);

            if (givenName != null)
            {
                GivenName = givenName.Value;
            }
            else
            {
                GivenName = User?.Identity?.Name;
            }
            // Try to get the Surname
            var surname = HttpContextAccessor?.HttpContext?.User.FindFirst(ClaimTypes.Surname);
            if (surname != null)
            {
                Surname = surname.Value;
            }
            else
            {
                Surname = "";
            }
            // Try to get Avatar
            var avatar = HttpContextAccessor?.HttpContext?.User.FindFirst("urn:google:image");
            if (avatar != null)
            {
                Avatar = avatar.Value;
            }
            else
            {
                Avatar = "";
            }
        }
        catch { }
    }
}
