@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <RadzenProfileMenu>
            <Template>
                <RadzenGravatar Email="@context.User.Identity.Name"></RadzenGravatar>
            </Template>
            <ChildContent>
                <RadzenProfileMenuItem Icon="Logout"></RadzenProfileMenuItem>
                <RadzenButton Text="Logout" Click="BeginSignOut"></RadzenButton>
                @*<RadzenProfileMenuItem Text="Logout" Icon="logout" Path="LogoutDisplay"></RadzenProfileMenuItem>*@
            </ChildContent>
        </RadzenProfileMenu>
        @*Hello, @context.User.Identity.Name!
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>*@
    </Authorized>
    <NotAuthorized>
        @*<a href="authentication/login">Log in</a>*@
        <div class="row">
            <div class="col-9"></div>
            <div class="col-3">
                <RadzenMenu>
                    <RadzenMenuItem Text="Login" Path="authentication/login" Icon="account_circle"></RadzenMenuItem>
                </RadzenMenu>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
